---
# Docker
- name: Add Docker apt key.
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  ignore_errors: "{{ docker_apt_ignore_key_error }}"

- name: Add Docker repository.
  apt_repository:
    repo: "deb [arch={{ docker_apt_arch }}] {{ docker_repo_url }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
    state: present
    update_cache: true

- name: Install Docker.
  package:
    name: "{{ docker_package }}"
    state: "{{ docker_package_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install Docker.
  package:
    name: "{{ docker_package }}"
    state: "{{ docker_package_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- name: Ensure docker users are added to the docker group.
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ ansible_env.USER }}"

# kind
- name: Download kind using get_url
  become: yes
  get_url:
    url: https://kind.sigs.k8s.io/dl/v0.11.1/kind-{{ ansible_system | lower }}-amd64
    dest: /usr/bin/kind
    mode: 0755

# kubectl
- name: Install kubectl
  snap:
    name: kubectl
    classic: yes

# helm
- name: Install helm
  snap:
    name: helm
    classic: yes

# istioctl
- name: ISTIOCTL | Check installation
  stat:
    path: "{{ istioctl_binary_dir }}/istioctl"
  changed_when: False
  register: istioctl_binary

- name: print
  debug:
    msg: "{{ istioctl_src_url }}"

- name: ISTIOCTL | Download and unarchive binary
  unarchive:
    remote_src: yes
    src: "{{ istioctl_src_url }}"
    dest: "{{ istioctl_source_dir }}"
    creates: "{{ istioctl_source_dir }}/{{ istioctl_name }}"
    mode: 0777
  when: not istioctl_binary.stat.exists

- name: ISTIOCTL | Link Istio binary
  file:
    src: "{{ istioctl_source_dir }}/{{ istioctl_name }}/bin/istioctl"
    dest: "{{ istioctl_binary_dir }}/istioctl"
    owner: root
    group: root
    mode: 0755
    state: link